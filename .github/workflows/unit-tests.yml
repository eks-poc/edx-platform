name: unit-tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  run-tests:
    runs-on: [ self-hosted ]
    strategy:
      matrix:
        python-version: ['3.8']
        django-version: ["3.2"]
        test_module: [ 
            "cms/djangoapps/api/ cms/djangoapps/cms_user_tasks/ cms/djangoapps/course_creators/ cms/djangoapps/export_course_metadata/ cms/djangoapps/maintenance/ cms/djangoapps/models/ cms/djangoapps/pipeline_js/ cms/djangoapps/xblock_config/ cms/envs/ cms/lib/",
            "common/lib/",
        ]


    # name: python ${{ matrix.python-version }},django ${{ matrix.django-version }} ${{ matrix.test_module }}
    steps:
      - name: sync directory owner
        run: sudo chown runner:runner -R .*
      - uses: actions/checkout@v1
      - name: start mongodb service
        run: |
          sudo /etc/init.d/mongodb start

      - name: set top-level module name
        run: |
          echo "module_name=$(echo '${{ matrix.test_module }}' | awk -F '/' '{print $1}')" >> $GITHUB_ENV

      - name: set settings path
        run: |
          echo "settings_path=$(if [ '${{ env.module_name }}' = 'cms' ]; then echo 'cms.envs.test'; else echo 'lms.envs.test' ; fi)" >> $GITHUB_ENV

#      - name: set pytest randomly option
#        run: |
#          echo "pytest_randomly_option=$(if [ '${{ env.module_name }}' = 'cms' ] || [ '${{ env.module_name }}' = 'common' ]; then echo '-p no:randomly'; else echo '' ; fi)" >> $GITHUB_ENV

      - name: install requirements
        run: |
          sudo pip install -r requirements/pip.txt
          sudo pip install -r requirements/edx/testing.txt
          sudo pip install "django~=${{ matrix.django-version }}.0"

      - name: run tests
        run: |
          python -Wd -m pytest -p no:randomly --ds=${{ env.settings_path }} ${{ matrix.test_module }}
